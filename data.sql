insert into t_user(id, user_name, password, role)
values (19029306617364480, 'admin1', '$2a$10$Xr.zl8/STE7VKD5B0meYUOIhFLNn6DPGzH8y86J1eLauhA5FWtnEe', 3);
INSERT INTO `t_choose`(`id`, `title`, `choice0`, `choice1`, `choice2`, `choice3`, `key_answer`)
VALUES (11, '编译程序绝大多数时间花在什么上', '词法分析', '语法分析', '语义分析', '表格管理', '表格管理'),
       (12,
        '汇编程序是将___ 翻译成__;编译程序是将____翻译成_____。①高级语言②汇编语言③机器语言④高级语言或汇编语言⑤汇编语言或机器语言',
        '①③①⑤', '②③①⑤', '④③①③', '②③①③', '②③①⑤'),
       (13, '给定文法G[A]：A→bA|cc ____是该文法的句子。', 'bcbc', 'bcbcc', 'bccbcc', 'bbbcc', 'bbbcc'),
       (14, '已知语言{anbnci | n>=1,i>=0 }，则下述文法中，______可以产生该语言。', 'S→AB, A→aAb|ab, B→cB|c',
        'S→aAb, A→aBb, B→cB|c', 'S→AB, A→aAb|ab, B→cB|ε', 'S→aSb|A, A→bAc|c', 'S→AB, A→aAb|ab, B→cB|ε'),
       (15, '在通常的语法分析方法中，___特别适用于表达式的分析。', 'LR(1)分析法', 'LL(1)分析法', '递归下降分析法',
        '算符优先分析法', '算符优先分析法'),
       (16, '在DFA的最小化过程中，初始应该把集合根据____划分子集。', '初态和非初态', '终态和非终态', '是否含有ε出边',
        '是否有出边', '终态和非终态'),
       (17, '基本块内的优化为___', '代码外提，删除归纳变量', '强度削弱，代码外提', '删除多余运算，删除无用赋值',
        '循环展开，循环合并', '删除多余运算，删除无用赋值'),
       (18, '若文法G定义的语言是无限集，则文法必然是___', '递归的', '二义性的', '前后文无关的', '无二义性的', 'A递归的'),
       (19, '下列____优化方法不是针对循环优化进行的。', '强度削弱', '删除归纳变量', '删除公共子表达式', '代码外提',
        '删除公共子表达式'),
       (20, '错误的局部化是指____', '把错误理解成局部的错误', '对错误在局部范围内进行纠正',
        '当发现错误时，跳过错误所在的语法单位继续分析下去', '当发现错误时立即停止编译，待用户改正错误后再继续编译',
        '当发现错误时，跳过错误所在的语法单位继续分析下去');

INSERT INTO `t_fill`(`id`, `title`, `key_answer`)
VALUES (1, 'PL0语言编译后的中间代码', 'P-Code'),
       (2, 'java通过什么实现跨平台', 'JVM'),
       (3, '判断句子是否符合某个给定的上下文无关文法的', '语法分析'),
       (4, 'JIT什么意思', '即时编译'),
       (5, 'FSM是什么', '有限状态自动机'),
       (6, '状态不确定的自动机的哪个', 'NFA'),
       (7, '词法分析后是什么', '语法分析'),
       (8, 'java编译后生成什么', '字节码文件');

INSERT INTO t_config(id, lexer_deadline, lexer_id, last_update_user_id)
values (1, '20250101000000', 1, 0);

insert into `t_lexer`(id, language, comp_language, description, commit_num, pass_num)
values (1, "C++", "PL0", "描述", 1, 0),
       (2, "C++", "Cangjie", "描述。。。", 1, 0);


insert into `t_lexer_testcase`(id, lexer_id, terminal_input, terminal_output)
values (1,
        1,
        'test1',
        'test2'),
       (6,
        2,
        'test8',
        'test9');



insert into `t_method_body`(id, method_id, description, input, output, in_param, out_param, global_var, changed_global,
                            pre_method, body)
values (31231412312, 3, "获取一个字符，返回值字符的ASCII值", "int a = 1;", "", "", "105", "", "", "", "int getch(){}");


insert into `t_method_testcase`(id, method_id, pre_code, terminal_input, terminal_output)
values (3116114,
        3,
        '#include<iostream>\n#include<cstdio>\nusing namespace std;\nint getch();\nint main(){\n    int output = getch();\n    cout<<endl;\n    cout<<"fhj……*……*（w4oqqh53fowhgfowhfoa…^hjf￥……oahwgofahwjioefhjo"<<endl;\n   cout<<output<<endl;\n    cout<<"fhj……*……*（w4oqqh53fowhgfowhfoa…^hjf￥……oahwgofahwjioefhjo"<<endl;\n}\n',
        'int i = 8;',
        '\nfhj……*……*（w4oqqh53fowhgfowhfoa…^hjf￥……oahwgofahwjioefhjo\n105\nfhj……*……*（w4oqqh53fowhgfowhfoa…^hjf￥……oahwgofahwjioefhjo\n');



INSERT INTO `t_method_name`(`id`, `language`, `comp_language`, `name`, `level`, `commit_num`, `pass_num`)
VALUES (1, 'c', 'PL0', 'void error(int n)', 0, 4234242, 3242),
       (2, 'c', 'PL0', 'int getsym()', '2', 4244234242, 3242342),
       (3, 'c', 'PL0', 'int getch()', '1', 423214242, 32342),
       (4, 'c', 'PL0', 'void init()', '1', 421134242, 113242),
       (5, 'c', 'PL0', 'int gen(enums fct, int y, int z)', '2', 411234242, 31111242),
       (6, 'c', 'PL0', 'int test(bool * sl, bool * s2, int n)', '1', 421134242, 321134242),
       (7, 'c', 'PL0', 'int inset(int e, bool * s)', '1', 421134242, 321134242),
       (8, 'c', 'PL0', 'int addset(bool * sr, bool * sl, bool * s2, int n)', '1', 421134242, 321134242),
       (9, 'c', 'PL0', 'int subset(bool * sr, bool * sl, bool * s2, int n)', '1', 421134242, 321134242),
       (10, 'c', 'PL0', 'int mulset(bool * sr, bool * sl, bool * s2, int n)', '1', 421134242, 321134242),
       (11, 'c', 'PL0', 'int block(int lev, int tx, bool * fsys)', '1', 421134242, 321134242),
       (12, 'c', 'PL0', 'void interpret()', '1', 421134242, 321134242),
       (13, 'c', 'PL0', 'int factor(bool * fsys, int * ptx, int lev)', '1', 421134242, 321134242),
       (14, 'c', 'PL0', 'int term(bool * fsys, int * ptx, int lev)', '1', 421134242, 321134242),
       (15, 'c', 'PL0', 'int condition(bool * fsys, int * ptx, int lev)', '1', 421134242, 321134242),
       (16, 'c', 'PL0', 'int expression(bool * fsys, int * ptx, int lev)', '1', 421134242, 321134242),
       (17, 'c', 'PL0', 'int statement(bool * fsys, int * ptx, int lev)', '1', 421134242, 321134242),
       (18, 'c', 'PL0', 'void listcode(int cx0)', '1', 421134242, 321134242),
       (19, 'c', 'PL0', 'int vardeclaration(int * ptx, int lev, int * pdx)', '1', 421134242, 321134242),
       (20, 'c', 'PL0', 'int constdeclaration(int * ptx, int lev, int * pdx)', '1', 421134242, 321134242),
       (21, 'c', 'PL0', 'int position(char * idt, int tx)', '1', 421134242, 321134242),
       (22, 'c', 'PL0', 'void enter(enums object k, int * ptx, int lev, int * pdx)', '1', 421134242, 321134242),
       (23, 'c', 'PL0', 'int common(int l, int * s, int b)', '1', 421134242, 321134242);



INSERT INTO `t_ai_q_a`
VALUES (454295264739274752,
        '问题9：能否教我用C语言写一个词法分析器中的函数“isDelimiter(token):判断一个单词是否是分隔符”？',
        0x1F8B08000000000000FF7D534B6F125114DEDF5F711317D4A4DA7D352686C6A41B373571E382E970716E3A0E661EB2304D8686D4B1A5A216B5528AF401C1060A89A6451EF6C774EE9D61D5BFE0B95C2062897775E69CEF7CE7F50DEBEF069973966BFADDCA95BBC18AB568D86C8435D76F37AE7B59BF0DC629F33607857C50AF4A1CDF6B06DF3BBCDCBB72D3CC3B0F0F6B1012F67E29EC5783C65B20F2DBDB83832340B2B352F0AE45AD25A2D317D426267BD3E79F5A412113F5BBC741397DDD2B20148BC554748B1AAAEEC409BE6FD9F1D56452BFAB3DC00B0B389134B1F89CC7B6E990799C50748B200491478EA1DA3469603B89558DA86B9826B0025F6BC4C0D402333E2E8B0403FEAB8F3955534C09BD8D5F230C0F189F129CA2BA8E1D8BE0872BD1E565FC4AD11D624D55B03532BB8620B152D456353C37C52C9EAA582412591455565E2A2A990AE0C8335BC69E28ABFF460C19794C523A356EE499321A554C932ACF093689ED98C604259E740DD7776F12889384E2E8F6E22CE470C512BA8ED6C57910026DF8ED2DB82ADC4E9E4E6A847B1FFC6EDDEF5F06F99A1CFE8EE82CE8EEF252861F54F8B1CBBF5558E30BA80452875B656E4FA8ADBAC14BC5B103F867CA8AEF1C858759B0B9F77924B12922D905F3BE4A65859779408951C12B484E3A6173545EE871AC6551FF7D15D2046C98331C1ADC0885CD0BFEA3C63339315EB10E14FEEF6DA8C372A7721ABFB3F9FF5ED9C7ECA4D7C9A483A21B56D39281EFFF6427051863D2901842FE5FE55F7CE76C04BEE8B2AD32F35A37360BED885EFF009C2827EAC1030000,
        '2024-06-07 14:47:12', '2024-06-07 14:47:12', 0),
       (454543139868061696, '问题1：能否教我用C语言写一个词法分析器中的函数“isKeyword(token):判断一个单词是否是关键字”？',
        0x
        '2024-06-08 07:12:10', '2024-06-08 07:12:10', 0),
       (454543477039771648,
        '问题2：能否教我用C语言写一个词法分析器中的函数“getNextToken():从输入字符流中获取下一个单词（token）”？',
        0x
        '2024-06-08 07:13:30', '2024-06-08 07:13:30', 0),
       (454543598594895872,
        '问题3：能否教我用C语言写一个词法分析器中的函数“peekNextToken():查看但不获取输入字符流中的下一个单词”？',
        0x
        '2024-06-08 07:13:59', '2024-06-08 07:13:59', 0),
       (454543717419528192, '问题4：能否教我用C语言写一个词法分析器中的函数“getTokenValue():获取当前的单词的值或内容”？',
        0x
        '2024-06-08 07:14:27', '2024-06-08 07:14:27', 0),
       (454543820595212288,
        '问题5：能否教我用C语言写一个词法分析器中的函数“advanceToNextLine():将输入指针移动到下一行”？',
        0x1F8B08000000000000FFA554CB4EDB4014DDFB2BA6910A01AAC2BA112BB655D505BB52892818C51275906368A50AC93C9394243C521E4D032A90D0A84D1C8B521AF2FC98CE8C9D557EA1773C89E51A5221358A6C797CEFB9E7DC7B7C4933636EDC909D0AAE17BA8D24AE6E774ECEE971C5FC589CB22A65ABA811FDD44C1BC1B9E5A01C12A7232FC477EA734916FD2324D6A4078699DD30F335DCDAFEADAD915C9196F3FC1157CB8047E37BB85E22AB314B6F59AD0CD92C0036291F93B52204E3AA86ABDF48F9C82C5D32A8FA066401203FC1D52BC01484D9D9D990303E8EC885418FD3BCAAB01C91E6D05D52A17050194592BCB8A43E819B3A8A424B8A22CAEACB485452A5883C12106C2C3D8B6F13FF8B85DE0B087E80677EBE2671A3B31A83EBF08C3C4CE38796B6090F56ABE5A8A1B9EFC468D9296FC3D28288FC36F8AB510FEEEB47938881A0A121F4AF8889E13E833E8BAF75F2A10855618CEEDE3A317E2FD0C8D858C07EBB625FFB72C8E51A3DCDD1AB339A4B0C1621CD0F548026B9840712EC36E2D6AF1FCEB97596642E6868247FDD6D241E447F85F944106C57D5F960C14CB8D90627DF63DE6E23DB73164C16BD094AB2BFCF95CDBDD777D0817CD361298AE0AF8645342F2951152D00C4D319D9FD222A8622F21C7FE3E39C18B0872FC04D04FEEAB447B67D7C976ECF844377CDECC682CF14E47B6268324676F7706DCB2C95702DE96EAD9DB7A800CF79BF6F8AA7D90A9EA1C7511F94E34DF0CED65D5511D5254566A27AFDB7DA9FA8FE13D72FCC2FAB9DCB43B219E79F2D1018B842604FB01DB49BBE77789049F475D80403F369BA40768EB89FB85CBE6A1CCF826238EFECC7C97ED21D469A199248E166CA6CEA2CE6E09AA1D9916C9BE9EB1D2D6BB563DCB59E36B84D4C53E7ACAFB0C44E0A7C5D1263ABB7EE6C348FEF2118F0694E03CD20DE23DB599B03CD0B651C4467AC0CE8F686263224659058CDAA1478993F9FE0ADCAE2050000,
        '2024-06-08 07:14:52', '2024-06-08 07:14:52', 0),
       (454543926342004736,
        '问题6：能否教我用C语言写一个词法分析器中的函数“skipWhitespace():跳过空白字符，如空格，制表符，换行符等”？',
        0x
        '2024-06-08 07:15:17', '2024-06-08 07:15:17', 0),
       (454544016020418560,
        '问题7：能否教我用C语言写一个词法分析器中的函数“isIdentifier(token):判断一个单词是否是标识符”？',
        0x
        '2024-06-08 07:15:39', '2024-06-08 07:15:39', 0),
       (454544129493118976,
        '问题8：能否教我用C语言写一个词法分析器中的函数“isOperator(token):判断一个单词是否是操作符”？',
        0x
        '2024-06-08 07:16:06', '2024-06-08 07:16:06', 0),
       (454544251266347008,
        '问题10：能否教我用C语言写一个词法分析器中的函数“addError(message):将错误信息记录到日志或错误处理器中”？',
        0x
        '2024-06-08 07:16:35', '2024-06-08 07:16:35', 0);
